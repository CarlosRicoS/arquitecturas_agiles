services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - ./seguridad/message_broker/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./seguridad/message_broker/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json
      - ./seguridad/autorizador/config/certs/cacert.pem:/etc/ssl/certs/cacert.pem
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 60s
    networks:
      custom_network:
        ipv4_address: 172.20.0.2

  autorizador:
    build:
      context: seguridad/autorizador
      dockerfile: ./Dockerfile
    command: bash -c "uvicorn autorizador:app --reload --port 4443 --host 0.0.0.0 --ssl-certfile /etc/certs/localhost.crt --ssl-keyfile /etc/certs/localhost.key --reload "
    container_name: "autorizador"
    environment:
      - PRE_SHARED_KEY=tOQJ4HDu9mWtYDhEwtTV5MgBCjUlw9dqCzunwkD0TO8=
      - AUTORIZADOR_PUERTO=4443
    ports:
      - "4443:4443"
    volumes:
      - ./logs:/app/logs
      - ./seguridad/autorizador/config/certs/:/etc/certs
    healthcheck:
      test: [ "CMD", "curl", "-k", "https://autorizador:4443/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 2s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      custom_network:
        ipv4_address: 172.20.0.3

  detector:
    build:
      context: .
      dockerfile: seguridad/deteccion_intrusos/Dockerfile
    container_name: "detector"
    depends_on:
      rabbitmq:
        condition: service_healthy
      autorizador:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ORIGENES_AUTORIZADOS="['192.168.0.2']"
      - AUTORIZADOR_URL=https://autorizador:4443
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && echo 'detector ready'"]
      interval: 5s
      retries: 3
      start_period: 2s
    networks:
      custom_network:
        ipv4_address: 172.20.0.4

  inventario:
    build:
      context: .
      dockerfile: seguridad/inventario/Dockerfile
    container_name: inventario_service
    environment:
      - NOMBRE_COLA=inventory-audit
      - AUTORIZADOR_URL=https://autorizador:4443
    volumes:
      - ./logs:/app/logs
    depends_on:
      detector:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      custom_network:
        ipv4_address: 172.20.0.5

  auditor:
    build:
      context: .
      dockerfile: seguridad/auditor/Dockerfile
    container_name: auditor
    environment:
      - QUEUE_NAME=inventory-audit
      - AUTORIZADOR_URL=https://autorizador:4443
    volumes:
      - ./logs:/app/logs
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      custom_network:
        ipv4_address: 172.20.0.6

#  logs:
#    build: ./logs
#    container_name: logs_service
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#    environment:
#      - RABBITMQ_HOST=rabbitmq
#      - ORIGENES_AUTORIZADOS="['192.168.0.2']"
#    volumes:
#      - ./logs:/app/logs
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    healthcheck:
#      test: ["CMD-SHELL", "sleep 10 && echo 'detector ready'"]
#      interval: 5s
#      retries: 3
#      start_period: 2s

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
