services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 30s

  monitor:
    build:
      context: .
      dockerfile: monitor/Dockerfile
    container_name: "monitor"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api-consulta-principal:
    build:
     context: micro-servicios/consulta
     dockerfile: ./Dockerfile
    container_name: api-consulta-principal
    environment:
      - RABBITMQ_HOST=rabbitmq
      - API_INSTANCIA=principal
      - API_PUERTO=8090
    ports:
      - "8090:8090"
    depends_on:
      - rabbitmq
      - monitor
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api-consulta-respaldo:
    build:
      context: micro-servicios/consulta
      dockerfile: ./Dockerfile
    container_name: api-consulta-respaldo
    environment:
      - RABBITMQ_HOST=rabbitmq
      - API_INSTANCIA=respaldo
      - API_PUERTO=8080
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - monitor
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  logger:
    build:
     context: logger
     dockerfile: ./Dockerfile
    container_name: logger
    volumes:
      - ./logs:/app/logs
    depends_on:
      rabbitmq:
        condition: service_healthy
      monitor:
        condition: service_started
      api-consulta-principal:
        condition: service_healthy
      api-consulta-respaldo:
        condition: service_healthy

  experimento:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      monitor:
        condition: service_started
      logger:
        condition: service_started
      api-consulta-principal:
        condition: service_healthy
      api-consulta-respaldo:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs