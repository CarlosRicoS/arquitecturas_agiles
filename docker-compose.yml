services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - ./seguridad/message_broker/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./seguridad/message_broker/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      #- RABBITMQ_LOGS=error # Change to "warning", "error", or "critical" to reduce verbosity
      #- RABBITMQ_SASL_LOGS=error
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 60s

  detector:
    build:
      context: .
      dockerfile: seguridad/deteccion_intrusos/Dockerfile
    container_name: "detector"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ORIGENES_AUTORIZADOS="['192.168.0.2']"
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && echo 'detector ready'"]
      interval: 5s
      retries: 3
      start_period: 2s

  autorizador:
    build:
      context: seguridad/autorizador
      dockerfile: ./Dockerfile
    container_name: "autorizador"
    environment:
      - PRE_SHARED_KEY=tOQJ4HDu9mWtYDhEwtTV5MgBCjUlw9dqCzunwkD0TO8=
      - AUTORIZADOR_PUERTO=8090
    ports:
      - "8090:8090"
    volumes:
      - ./logs:/app/logs

  inventario:
    build:
      context: seguridad/inventario
      dockerfile: ./Dockerfile
    container_name: inventario_service
    environment:
      - RABBITMQ_HOST=rabbitmq
      - AUTORIZADOR_HOST=autorizador
      - AUTORIZADOR_PUERTO=8090
      - NOMBRE_COLA=inventory-audit
    depends_on:
      - rabbitmq
      - autorizador
    ports:
      - "8080:8080"



#  logs:
#    build: ./logs
#    container_name: logs_service
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#    environment:
#      - RABBITMQ_HOST=rabbitmq
#      - ORIGENES_AUTORIZADOS="['192.168.0.2']"
#    volumes:
#      - ./logs:/app/logs
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    healthcheck:
#      test: ["CMD-SHELL", "sleep 10 && echo 'detector ready'"]
#      interval: 5s
#      retries: 3
#      start_period: 2s

volumes:
  logs_data:
